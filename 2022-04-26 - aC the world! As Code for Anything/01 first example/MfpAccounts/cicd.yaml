name: CICD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Run:

    runs-on: ubuntu-latest

    steps:
      - name: Create variables for module cacher
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v3.5
        with:
          modules-to-cache: Microsoft.Graph.Identity.DirectoryManagement,Microsoft.Graph.Users.Actions,Microsoft.Graph.Groups,Microsoft.Graph.Users

      - name: Run module cacher action
        id: cacher
        uses: actions/cache@v2
        with:
          path: ${{ steps.psmodulecache.outputs.modulepath }}
          key: ${{ steps.psmodulecache.outputs.keygen }}

      - name: Install PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        uses: potatoqualitee/psmodulecache@v3.5

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run script on PR
        if: ${{ github.event_name == 'pull_request' }}
        shell: pwsh
        run: .\script.ps1 -JSON_CERT '${{ secrets.JSON_CERT }}' -CERT_SECRET '${{ secrets.CERT_SECRET }}' -AAD_APP_ID '${{ secrets.AAD_APP_ID }}' -AAD_TENANT_ID '${{ secrets.AAD_TENANT_ID }}' -Test

      - name: Run script on push
        if: ${{ github.event_name == 'push' }}
        shell: pwsh
        run: .\script.ps1 -JSON_CERT '${{ secrets.JSON_CERT }}' -CERT_SECRET '${{ secrets.CERT_SECRET }}' -AAD_APP_ID '${{ secrets.AAD_APP_ID }}' -AAD_TENANT_ID '${{ secrets.AAD_TENANT_ID }}'